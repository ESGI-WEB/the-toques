generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id          Int      @id @default(sequence())
  preferences String?  @db.String(2000)
  email       String   @unique
  firstName   String
  password    String
  role        Role     @default(USER)
  recipes     Recipe[]
  marks       Mark[]
  favorites   Recipe[] @relation("UserRecipesFavorites")
  likes       Like[]
}

model Recipe {
  id          Int                @id @default(sequence())
  title       String
  image       String
  plates      Int                @default(4)
  ingredients RecipeIngredient[]
  steps       RecipeStep[]
  authorId    Int
  author      User               @relation(fields: [authorId], references: [id])
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
  marks       Mark[]
  favorites   User[]             @relation("UserRecipesFavorites")
  likes       Like[]
}

model RecipeIngredient {
  id        Int      @id @default(sequence())
  recipeId  Int
  recipe    Recipe   @relation(fields: [recipeId], references: [id])
  name      String
  quantity  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RecipeStep {
  id          Int      @id @default(sequence())
  recipeId    Int
  recipe      Recipe   @relation(fields: [recipeId], references: [id])
  name        String
  description String   @db.String(2000)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Mark {
  id        Int      @id @default(sequence())
  recipeId  Int
  recipe    Recipe   @relation(fields: [recipeId], references: [id])
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  title     String?
  content   String?
  mark      Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id        Int      @id @default(sequence())
  recipeId  Int
  recipe    Recipe   @relation(fields: [recipeId], references: [id])
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
